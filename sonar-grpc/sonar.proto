syntax = "proto3";

package sonar;

import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

service SonarService {
	rpc UserList(UserListRequest) returns (UserListResponse);
	rpc UserCreate(UserCreateRequest) returns (User);
	rpc UserUpdate(UserUpdateRequest) returns (User);
	rpc UserDelete(UserDeleteRequest) returns (google.protobuf.Empty);
	rpc UserLogin(UserLoginRequest) returns (UserLoginResponse);
	rpc UserLogout(UserLogoutRequest) returns (google.protobuf.Empty);

	rpc ImageCreate(ImageCreateRequest) returns (ImageCreateResponse);
	rpc ImageDelete(ImageDeleteRequest) returns (google.protobuf.Empty);
	rpc ImageDownload(ImageDownloadRequest) returns (stream ImageDownloadResponse);

	rpc ArtistList(ArtistListRequest) returns (ArtistListResponse);
	rpc ArtistGet(ArtistGetRequest) returns (Artist);
	rpc ArtistCreate(ArtistCreateRequest) returns (Artist);
	rpc ArtistUpdate(ArtistUpdateRequest) returns (Artist);
	rpc ArtistDelete(ArtistDeleteRequest) returns (google.protobuf.Empty);

	rpc AlbumList(AlbumListRequest) returns (AlbumListResponse);
	rpc AlbumListByArtist(AlbumListByArtistRequest) returns (AlbumListResponse);
	rpc AlbumGet(AlbumGetRequest) returns (Album);
	rpc AlbumCreate(AlbumCreateRequest) returns (Album);
	rpc AlbumUpdate(AlbumUpdateRequest) returns (Album);
	rpc AlbumDelete(AlbumDeleteRequest) returns (google.protobuf.Empty);

	rpc TrackList(TrackListRequest) returns (TrackListResponse);
	rpc TrackListByAlbum(TrackListByAlbumRequest) returns (TrackListResponse);
	rpc TrackGet(TrackGetRequest) returns (Track);
	rpc TrackCreate(TrackCreateRequest) returns (Track);
	rpc TrackUpdate(TrackUpdateRequest) returns (Track);
	rpc TrackDelete(TrackDeleteRequest) returns (google.protobuf.Empty);

	rpc PlaylistList(PlaylistListRequest) returns (PlaylistListResponse);
	rpc PlaylistGet(PlaylistGetRequest) returns (Playlist);
	rpc PlaylistCreate(PlaylistCreateRequest) returns (Playlist);
	rpc PlaylistUpdate(PlaylistUpdateRequest) returns (Playlist);
	rpc PlaylistDelete(PlaylistDeleteRequest) returns (google.protobuf.Empty);
	rpc PlaylistTrackList(PlaylistTrackListRequest) returns (PlaylistTrackListResponse);
	rpc PlaylistTrackInsert(PlaylistTrackInsertRequest) returns (google.protobuf.Empty);
	rpc PlaylistTrackRemove(PlaylistTrackRemoveRequest) returns (google.protobuf.Empty);
	rpc PlaylistTrackClear(PlaylistTrackClearRequest) returns (google.protobuf.Empty);

	rpc ScrobbleList(ScrobbleListRequest) returns (ScrobbleListResponse);
	rpc ScrobbleCreate(ScrobbleCreateRequest) returns (Scrobble);
	rpc ScrobbleDelete(ScrobbleDeleteRequest) returns (google.protobuf.Empty);

	rpc PinList(PinListRequest) returns (PinListResponse);
	rpc PinSet(PinSetRequest) returns (google.protobuf.Empty);
	rpc PinUnset(PinUnsetRequest) returns (google.protobuf.Empty);

	rpc ExternalDownloadStart(ExternalDownloadRequest) returns (google.protobuf.Empty);

	rpc Import(stream ImportRequest) returns (Track);

	rpc MetadataFetch(MetadataFetchRequest) returns (google.protobuf.Empty);

	rpc MetadataAlbumTracks(MetadataAlbumTracksRequest) returns (MetadataAlbumTracksResponse);
}

message Property {
	string key = 1;
	string value = 2;
}

message PropertyUpdate {
	string key = 1;
	optional string value = 2;
}

message User {
	string user_id = 1;
	string username = 2;
	optional string avatar_id = 3;
}

message UserListRequest {
	optional uint32 offset = 1;
	optional uint32 count = 2;
}

message UserListResponse {
	repeated User users = 1;
}

message UserCreateRequest {
	string username = 1;
	string password = 2;
	optional string avatar_id = 3;
}

message UserUpdateRequest {
	string user_id = 1;
	optional string password = 2;
	optional string avatar_id = 3;
}

message UserDeleteRequest {
	string user_id = 1;
}

message UserLoginRequest {
	string username = 1;
	string password = 2;
}

message UserLoginResponse {
	string user_id = 1;
	string token = 2;
}

message UserLogoutRequest {
	string token = 1;
}

message ImageCreateRequest {
	bytes content = 1;
}

message ImageCreateResponse {
	string image_id = 1;
}

message ImageDeleteRequest {
	string image_id = 1;
}

message ImageDownloadRequest {
	string image_id = 1;
}

message ImageDownloadResponse {
	string image_id = 1;
	string mime_type = 2;
	bytes content = 3;
}

message Artist {
	string id = 1;
	string name = 2;
	uint32 album_count = 3;
	uint32 listen_count = 4;
	optional string coverart_id = 5; 
	repeated Property properties = 6;
}

message ArtistListRequest {
	optional uint32 offset = 1;
	optional uint32 count = 2;
}

message ArtistListResponse {
	repeated Artist artists = 1;
}

message ArtistGetRequest {
	string artist_id = 1;
}

message ArtistCreateRequest {
	string name = 1;
	optional string coverart_id = 2;
	repeated Property properties = 3;
}

message ArtistDeleteRequest {
	string artist_id = 1;	
}

message ArtistUpdateRequest {
	string artist_id = 1;
	optional string name = 2;
	optional string coverart_id = 3;
	repeated PropertyUpdate properties = 4;
}

message Album {
	string id = 1;
	string name = 2;
	uint32 track_count = 3;
	google.protobuf.Duration duration = 4;
	uint32 listen_count = 5;
	string artist_id = 6;
	optional string coverart_id = 7;
	repeated Property properties = 8;
}

message AlbumListRequest {
	optional uint32 offset = 1;
	optional uint32 count = 2;
}

message AlbumListByArtistRequest {
	optional uint32 offset = 1;
	optional uint32 count = 2;
	string artist_id = 3;
}

message AlbumListResponse {
	repeated Album albums = 1;
}

message AlbumGetRequest {
	string album_id = 1;
}

message AlbumCreateRequest {
	string name = 1;
	string artist_id = 2;
	optional string coverart_id = 3;
	repeated Property properties = 4;
}

message AlbumUpdateRequest {
	string album_id = 1;
	optional string name = 2;
	optional string artist_id = 3;
	optional string coverart_id = 4;
	repeated PropertyUpdate properties = 5;
}

message AlbumDeleteRequest {
	string album_id = 1;
}

message Track {
	string id = 1;
	string name = 2;
	string artist_id = 3;
	string album_id = 4;
	google.protobuf.Duration duration = 5;
	uint32 listen_count = 6;
	optional string cover_art_id = 7;
	repeated Property properties = 8;
}

message TrackListRequest {
	optional uint32 offset = 1;
	optional uint32 count = 2;
}

message TrackListByAlbumRequest {
	optional uint32 offset = 1;
	optional uint32 count = 2;
	string album_id = 3;
}

message TrackListResponse {
	repeated Track tracks = 1;
}

message TrackGetRequest {
	string track_id = 1;
}

message TrackCreateRequest {
	string name = 1;
	string album_id = 2;
	optional string coverart_id = 3;
	optional string audio_id = 4;
	repeated Property properties = 5;
}

message TrackUpdateRequest {
	string track_id = 1;
	optional string name = 2;
	optional string album_id = 3;
	optional string coverart_id = 4;
	repeated PropertyUpdate properties = 5;
}

message TrackDeleteRequest {
	string track_id = 1;
}

message Playlist {
	string id = 1;
	string name = 2;
	string user_id = 3;
	uint32 track_count = 4;
	google.protobuf.Duration duration = 5;
	optional string coverart_id = 6;
	repeated Property properties = 7;
}

message PlaylistListRequest {
	optional uint32 offset = 1;
	optional uint32 count = 2;
	optional string user_id = 3;
}

message PlaylistListResponse {
	repeated Playlist playlists = 1;
}

message PlaylistGetRequest {
	string playlist_id = 1;
}

message PlaylistCreateRequest {
	string name = 1;
	string owner_id = 2;
	repeated string track_ids = 3;
	repeated Property properties = 4;
}

message PlaylistUpdateRequest {
	string playlist_id = 1;
	optional string name = 2;
	repeated PropertyUpdate properties = 3;
}

message PlaylistDeleteRequest {
	string playlist_id = 1;
}

message PlaylistTrackListRequest {
	string playlist_id = 1;
}

message PlaylistTrackListResponse {
	repeated Track tracks = 1;
}

message PlaylistTrackInsertRequest {
	string playlist_id = 1;
	repeated string track_ids = 2;
}

message PlaylistTrackRemoveRequest {
	string playlist_id = 1;
	repeated string track_ids = 2;
}

message PlaylistTrackClearRequest {
	string playlist_id = 1;
}

message Scrobble {
	string id = 1;
	string track_id = 2;
	string user_id = 3;
	google.protobuf.Timestamp listen_at = 4;
	google.protobuf.Duration listen_duration = 5;
	string listen_device = 6;
	repeated Property properties = 7;
}

message ScrobbleListRequest {
	optional uint32 offset = 1;
	optional uint32 count = 2;
}

message ScrobbleListResponse {
	repeated Scrobble scrobbles = 1;
}

message ScrobbleCreateRequest {
	string user_id = 1;
	string track_id = 2;
	google.protobuf.Timestamp listen_at = 3;
	google.protobuf.Duration listen_duration = 4;
	string listen_device = 5;
	repeated Property properties = 6;
}

message ScrobbleDeleteRequest {
	string scrobble_id = 1;
}

message PinListRequest {
	string user_id = 1;
}

message PinListResponse {
	repeated string sonar_ids = 1;
}

message PinSetRequest {
	string user_id = 1;
	repeated string sonar_ids = 2;
}

message PinUnsetRequest {
	string user_id = 1;
	repeated string sonar_ids = 2;
}

message ExternalDownloadRequest {
	string user_id = 1;
	string external_id = 2;
}

message ImportRequest {
	bytes chunk = 1;
	optional string filepath = 2;
	optional uint32 artist_id = 3;
	optional uint32 album_id = 4;
}

enum MetadataFetchKind {
	METADATA_FETCH_KIND_ARTIST = 0;
	METADATA_FETCH_KIND_ALBUM = 1;
	METADATA_FETCH_KIND_ALBUMTRACKS = 2;
	METADATA_FETCH_KIND_TRACK = 3;
}

message MetadataFetchRequest {
	MetadataFetchKind kind = 1;
	string item_id = 2;
}

message TrackMetadata {
	optional string name = 1;
	repeated Property properties = 2;
	optional bytes cover = 3;
}

message MetadataAlbumTracksRequest {
	uint32 album_id = 1;
}

message MetadataAlbumTracksResponse {
	map<uint32, TrackMetadata> tracks = 1;
}

message SpotifyListRequest {
}

message SpotifyListResponse {
	repeated string spotify_ids = 1;
}

message SpotifyAddRequest {
	repeated string spotify_ids = 1;
}

message SpotifyRemoveRequest {
	repeated string spotify_ids = 1;
}
